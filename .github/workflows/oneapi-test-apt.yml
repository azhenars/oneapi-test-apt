name: oneapi-test-apt

on:
  push: {}
  workflow_dispatch: {}
  schedule:
    - cron: '0 * * * *'

env:
  LINUX_COMPONENTS: intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic,intel-oneapi-compiler-fortran
  PRAGMA_KEYS: akamai-x-get-cache-key, akamai-x-cache-on, akamai-x-cache-remote-on, akamai-x-get-true-cache-key, akamai-x-check-cacheable, akamai-x-get-request-id, akamai-x-serial-no, akamai-x-get-ssl-client-session-id, X-Akamai-CacheTrack, akamai-x-get-client-ip, akamai-x-feo-trace, akamai-x-tapioca-trace

jobs:
  build_linux_apt:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    steps:
    - uses: actions/checkout@v2
    - name: read environment
      run: |
        dig apt.repos.intel.com +short
        echo ""
        curl -D -  -o /dev/null  -H "Pragma: $PRAGMA_KEYS" https://apt.repos.intel.com/test.txt 
    - name: setup apt repo
      run: |
        sudo dpkg --add-architecture i386
        chmod +x scripts/setup_apt_repo_linux.sh
        scripts/setup_apt_repo_linux.sh
        grep ^ /etc/apt/sources.list /etc/apt/sources.list.d/*
    - name: print packages info
      run: sudo apt-cache show python3 python-jsonschema intel-oneapi-*
    - name: dry-run install oneapi
      run: sudo apt install --dry-run $(apt-cache search intel-oneapi | grep -v intelfpga | grep -v -- '-tail$' | awk '{print $1}')
    - name: dry-run install mpi
      run: sudo apt install --dry-run $(apt-cache search intel-mpi | grep -v intel-mpi-2019.0-045 | grep -v -- '-tail$' | awk '{print $1}')
